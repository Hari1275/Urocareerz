# Task ID: 5
# Title: Admin Dashboard: User & Content Moderation
# Status: pending
# Dependencies: 1
# Priority: high
# Description: Build the core admin dashboard for manual approval of new users and all posted content.
# Details:
Create an admin-only interface to view lists of pending user registrations and submitted opportunities. Implement 'approve' and 'reject' actions for both users and content. Admins must also be able to remove flagged/inappropriate posts and assign user roles.

# Test Strategy:
Log in as an Admin. Verify access to the dashboard. Approve a pending user and a pending post, and confirm their status changes. Reject a user/post and confirm they are handled correctly.

# Subtasks:
## 1. Implement Admin Role-Based Access Control (RBAC) Middleware [pending]
### Dependencies: None
### Description: Create middleware to protect admin-only API routes, ensuring only users with the 'admin' role can access them.
### Details:
The middleware should run after the standard authentication middleware. It will check the authenticated user's role from the session/token. If the role is not 'admin', it should return a 403 Forbidden error. This middleware will be applied to all new admin API endpoints.

## 2. Create Admin API Endpoints for User Management [pending]
### Dependencies: 5.1
### Description: Develop API endpoints for admins to manage users, including approving/rejecting pending accounts and changing user roles.
### Details:
Implement endpoints like `POST /api/admin/users/{id}/approve`, `POST /api/admin/users/{id}/reject`, and `PUT /api/admin/users/{id}/role`. Also include an endpoint `GET /api/admin/users?status=pending` to list users awaiting approval. These endpoints must be protected by the admin RBAC middleware.

## 3. Create Admin API Endpoints for Content Moderation [pending]
### Dependencies: 5.1
### Description: Develop API endpoints for admins to moderate user-submitted content (opportunities), including approval, rejection, and deletion.
### Details:
Implement endpoints like `POST /api/admin/opportunities/{id}/approve`, `POST /api/admin/opportunities/{id}/reject`, and `DELETE /api/admin/opportunities/{id}`. Include a `GET /api/admin/opportunities?status=pending` endpoint to fetch content awaiting moderation. Protect all endpoints with the admin RBAC middleware.

## 4. Build User Management UI in Admin Dashboard [pending]
### Dependencies: 5.2
### Description: Implement the UI components within the existing admin dashboard to manage users by connecting to the new user management APIs.
### Details:
Create a view that lists pending and active users, fetched from the new admin API. Add buttons for 'Approve', 'Reject', and a modal/form to change a user's role. Connect these UI elements to the corresponding API endpoints and handle state updates.

## 5. Build Content Moderation UI in Admin Dashboard [pending]
### Dependencies: 5.3
### Description: Implement the UI components within the admin dashboard to moderate submitted opportunities by connecting to the new content moderation APIs.
### Details:
Create a view to display a queue of pending opportunities fetched from the API. Each item should have 'Approve' and 'Reject' buttons. Implement functionality to view and delete any existing post. Connect all actions to the content moderation API endpoints and manage UI state accordingly.

