# Task ID: 5
# Title: Admin Dashboard: User & Content Moderation
# Status: pending
# Dependencies: 1
# Priority: high
# Description: Build the core admin dashboard for manual approval of new users and all posted content, featuring a complete UI overhaul using modern components.
# Details:
Create an admin-only interface using a modern shadcn/ui design with a sidebar layout and data tables. The dashboard will be used to view lists of pending user registrations and submitted opportunities. Implement 'approve' and 'reject' actions for both users and content. Admins must also be able to remove flagged/inappropriate posts and assign user roles. The single admin user will log in via the standard OTP system.

# Test Strategy:
Log in as the pre-configured Admin user via the standard OTP flow. Verify access to the dashboard and its modern layout. In the user management table, approve a pending user and confirm their status changes. In the content moderation table, reject a pending post and confirm it is handled correctly. Test table sorting and filtering.

# Subtasks:
## 1. Implement Admin Role-Based Access Control (RBAC) Middleware [pending]
### Dependencies: None
### Description: Create middleware to protect admin-only API routes, ensuring only users with the 'admin' role can access them.
### Details:
The middleware should run after the standard authentication middleware. It will check the authenticated user's role from the session/token. If the role is not 'admin', it should return a 403 Forbidden error. This middleware will be applied to all new admin API endpoints.

## 2. Create Admin API Endpoints for User Management [pending]
### Dependencies: 5.1
### Description: Develop API endpoints for admins to manage users, including approving/rejecting pending accounts and changing user roles.
### Details:
Implement endpoints like `POST /api/admin/users/{id}/approve`, `POST /api/admin/users/{id}/reject`, and `PUT /api/admin/users/{id}/role`. Also include an endpoint `GET /api/admin/users?status=pending` to list users awaiting approval. These endpoints must be protected by the admin RBAC middleware.

## 3. Create Admin API Endpoints for Content Moderation [pending]
### Dependencies: 5.1
### Description: Develop API endpoints for admins to moderate user-submitted content (opportunities), including approval, rejection, and deletion.
### Details:
Implement endpoints like `POST /api/admin/opportunities/{id}/approve`, `POST /api/admin/opportunities/{id}/reject`, and `DELETE /api/admin/opportunities/{id}`. Include a `GET /api/admin/opportunities?status=pending` endpoint to fetch content awaiting moderation. Protect all endpoints with the admin RBAC middleware.

## 4. Build User Management UI with shadcn/ui Data Table [pending]
### Dependencies: 5.2
### Description: Implement the user management interface within the admin dashboard using shadcn/ui components, focusing on a data table for efficient user handling.
### Details:
Build the user management view using a shadcn/ui `<DataTable>`. This table should list all users and include columns for name, email, role, and status. Implement filtering (by status) and sorting capabilities. Integrate 'Approve'/'Reject' buttons for pending users and a modal/dropdown to change roles. Connect all UI actions to the user management API endpoints.

## 5. Build Content Moderation UI with shadcn/ui Data Table [pending]
### Dependencies: 5.3
### Description: Implement the content moderation interface within the admin dashboard using shadcn/ui components, featuring a data table for managing opportunities.
### Details:
Build the content moderation view using a shadcn/ui `<DataTable>`. The table will display submitted opportunities with columns like title, author, and status. Implement filtering by status (e.g., 'pending', 'approved') and sorting. Add 'Approve', 'Reject', and 'Delete' action buttons for each item. Connect all UI actions to the content moderation API endpoints.

## 6. Implement Core Admin Dashboard Layout with Sidebar [pending]
### Dependencies: 5.1
### Description: Create the foundational layout for the admin dashboard using shadcn/ui, including a persistent sidebar for navigation and a main content area.
### Details:
Build the primary dashboard shell with a clean, professional aesthetic using shadcn/ui components. Implement a sidebar for navigating between 'User Management' and 'Content Moderation' sections. This layout will serve as the container for all other admin views and must be protected by the admin RBAC middleware.

## 7. Implement Core Admin Dashboard Layout with Sidebar [pending]
### Dependencies: 5.1
### Description: Create the foundational layout for the admin dashboard using shadcn/ui, including a persistent sidebar for navigation and a main content area.
### Details:
Build the primary dashboard shell with a clean, professional aesthetic using shadcn/ui components. Implement a sidebar for navigating between 'User Management' and 'Content Moderation' sections. This layout will serve as the container for all other admin views and must be protected by the admin RBAC middleware.

